<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxm.file.mapper.CommentMapper">
    <resultMap id="comment" type="com.jxm.file.entity.Comment">
        <id property="id" column="id"/>
        <result property="nickname" column="nickname"/>
        <result property="content" column="content"/>
        <result property="avatar" column="avatar"/>
        <result property="createTime" column="create_time"/>
        <result property="published" column="is_published"/>
        <result property="adminComment" column="is_admin_comment"/>
        <result property="page" column="page"/>
        <result property="parentCommentId" column="parent_comment_id"/>
        <association property="article" javaType="com.jxm.file.vo.ArticleIdAndTitle">
            <id property="id" column="jump_id"/>
            <result property="title" column="title"/>
        </association>
    </resultMap>

    <!--按页面和父评论id查询评论List-->
    <select id="getListByPageAndParentCommentId" resultMap="comment">
        select c.id, c.nickname, c.email, c.content, c.avatar, c.create_time, c.ip, c.is_published, c.is_admin_comment, c.page,
        c.is_notice, c.parent_comment_id, c.website, c.jump_id, c.qq, b.title
        from comment as c left join blog as b on c.jump_id=b.id
        <where>
            <if test="page!=null">
                c.page=#{page}
            </if>
            <if test="page==0 and jumpId!=null">
                and c.jump_id=#{jumpId}
            </if>
            and c.parent_comment_id=#{parentCommentId}
        </where>
    </select>

    <!--按父评论id查询评论List-->
    <select id="getListByParentCommentId" resultMap="comment">
        select c.id, c.nickname,c.content, c.avatar, c.create_time, c.is_published, c.is_admin_comment, c.page,
             c.parent_comment_id, c.jump_id, f.filename
        from comment as c left join r_pan_user_file as f on c.jump_id=f.file_id
        where c.parent_comment_id=#{parentCommentId}
    </select>

    <resultMap id="pageComment" type="com.jxm.file.vo.PageComment">
        <id property="id" column="id"/>
        <result property="nickname" column="nickname"/>
        <result property="content" column="content"/>
        <result property="avatar" column="avatar"/>
        <result property="createTime" column="create_time"/>
        <result property="adminComment" column="is_admin_comment"/>
        <result property="parentCommentId" column="parent_comment_id"/>
        <result property="parentCommentNickname" column="parent_comment_nickname"/>
    </resultMap>

    <!--查询页面展示的评论List-->
    <select id="getPageCommentListByPageAndParentCommentId" resultMap="pageComment">
        select c1.id, c1.nickname, c1.content, c1.avatar, c1.create_time, c1.is_admin_comment,
        c1.parent_comment_id as parent_comment_id, c2.nickname as parent_comment_nickname
        from comment as c1 left join comment as c2 on c1.parent_comment_id=c2.id
        where c1.page=#{page}
        <if test="page==0 and jumpId!=null">
            and c1.jump_id=#{jumpId}
        </if>
        and c1.parent_comment_id=#{parentCommentId}
        and c1.is_published=false
        order by c1.create_time desc
    </select>

    <!--按id查询评论-->
    <select id="getCommentById" resultMap="comment">
        select c.id, c.nickname, c.content, c.avatar, c.create_time, c.is_published, c.is_admin_comment, c.page,c.parent_comment_id,c.jump_id, b.filename
        from comment as c left join r_pan_user_file as b on c.jump_id=b.file_id
        where c.id=#{id}
    </select>

    <!--更新评论公开状态-->
    <update id="updateCommentPublishedById">
        update comment set is_published=#{published} where id=#{commentId}
    </update>

    <select id="getCommentCountByJumpId" resultType="java.lang.Integer">
        select count(*)
        from comment
        where jump_id=#{articleId}
    </select>

    <!--更新评论接收邮件提醒状态-->
    <update id="updateCommentNoticeById">
        update comment set is_notice=#{notice} where id=#{commentId}
    </update>

    <!--按id删除评论-->
    <delete id="deleteCommentById">
        delete from comment where id=#{commentId}
    </delete>

    <!--按博客id删除博客下所有评论-->
    <delete id="deleteCommentsByBlogId">
        delete from comment where jump_id=#{jumpId}
    </delete>

    <!--更新评论-->
    <update id="updateComment">
        update comment set nickname=#{nickname}, avatar=#{avatar}, email=#{email}, ip=#{ip}, content=#{content}, website=#{website}
        where id=#{id}
    </update>

    <!--按页面查询评论数量-->
    <select id="countByPageAndIsPublished" resultType="java.lang.Integer">
        select count(*) from comment
        where page=#{page}
        <if test="isPublished!=null">
            and is_published=#{isPublished}
        </if>
        <if test="page==0 and jumpId!=0">
            and jump_id=#{jumpId}
        </if>
    </select>

    <!--查询所有评论数量-->
    <select id="countComment" resultType="java.lang.Integer">
        select count(*) from comment
    </select>

    <!--保存评论-->
    <insert id="saveComment" useGeneratedKeys="true" keyProperty="id">
        insert into comment (nickname, content, avatar, create_time,is_published, is_admin_comment,
        page, parent_comment_id, jump_id)
        values (#{nickname}, #{content}, #{avatar}, #{createTime}, #{published}, #{adminComment},
        #{page}, #{parentCommentId}, #{jumpId})
    </insert>
</mapper>
