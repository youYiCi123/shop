<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxm.file.mapper.RPanUserFileMapper">
    <resultMap id="BaseResultMap" type="com.jxm.file.entity.RPanUserFile">
        <id column="file_id" jdbcType="BIGINT" property="fileId"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="real_file_id" jdbcType="BIGINT" property="realFileId"/>
        <result column="filename" jdbcType="VARCHAR" property="filename"/>
        <result column="pass_flag" jdbcType="BIT" property="passFlag"/>
        <result column="folder_flag" jdbcType="BIT" property="folderFlag"/>
        <result column="water_mater_flag" jdbcType="BIT" property="waterMaterFlag"/>
        <result column="file_size_desc" jdbcType="VARCHAR" property="fileSizeDesc"/>
        <result column="file_type" jdbcType="BIT" property="fileType"/>
        <result column="del_flag" jdbcType="BIT" property="delFlag"/>
        <result column="create_user" jdbcType="BIGINT" property="createUser"/>
        <result column="pass_user_id" jdbcType="BIGINT" property="passUserId"/>
        <result column="pass_user_name" jdbcType="VARCHAR" property="passUserName"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="pass_time" jdbcType="TIMESTAMP" property="passTime"/>
        <result column="update_user" jdbcType="BIGINT" property="updateUser"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="dep_id" jdbcType="VARCHAR" property="depId"/>
    </resultMap>
    <sql id="Base_Column_List">
        file_id, user_id, user_name,parent_id, real_file_id, filename, folder_flag, file_size_desc, file_type, del_flag, create_user, create_time, update_user, update_time,dep_id
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from r_pan_user_file
        where file_id = #{fileId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from r_pan_user_file
        where file_id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.jxm.file.entity.RPanUserFile">
        insert into r_pan_user_file (file_id, user_id, parent_id,
          real_file_id, filename, folder_flag,
          file_size_desc, file_type, del_flag,
          create_user, create_time, update_user,
          update_time,dep_id)
        values (#{fileId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT},
          #{realFileId,jdbcType=BIGINT}, #{filename,jdbcType=VARCHAR}, #{folderFlag,jdbcType=BIT},
          #{fileSizeDesc,jdbcType=VARCHAR}, #{fileType,jdbcType=BIT}, #{delFlag,jdbcType=BIT},
          #{createUser,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=BIGINT},
          #{updateTime,jdbcType=TIMESTAMP},#{depId,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.jxm.file.entity.RPanUserFile">
        insert into r_pan_user_file
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="fileId != null">
                file_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="realFileId != null">
                real_file_id,
            </if>
            <if test="filename != null">
                filename,
            </if>
            <if test="folderFlag != null">
                folder_flag,
            </if>
            <if test="fileSizeDesc != null">
                file_size_desc,
            </if>
            <if test="fileType != null">
                file_type,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateUser != null">
                update_user,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="depId != null">
                dep_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="fileId != null">
                #{fileId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=BIGINT},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="realFileId != null">
                #{realFileId,jdbcType=BIGINT},
            </if>
            <if test="filename != null">
                #{filename,jdbcType=VARCHAR},
            </if>
            <if test="folderFlag != null">
                #{folderFlag,jdbcType=BIT},
            </if>
            <if test="fileSizeDesc != null">
                #{fileSizeDesc,jdbcType=VARCHAR},
            </if>
            <if test="fileType != null">
                #{fileType,jdbcType=BIT},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=BIT},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                #{updateUser,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="depId != null">
                #{depId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.jxm.file.entity.RPanUserFile">
        update r_pan_user_file
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="realFileId != null">
                real_file_id = #{realFileId,jdbcType=BIGINT},
            </if>
            <if test="filename != null">
                filename = #{filename,jdbcType=VARCHAR},
            </if>
            <if test="folderFlag != null">
                folder_flag = #{folderFlag,jdbcType=BIT},
            </if>
            <if test="waterMaterFlag != null">
                water_mater_flag = #{waterMaterFlag,jdbcType=BIT},
            </if>
            <if test="fileSizeDesc != null">
                file_size_desc = #{fileSizeDesc,jdbcType=VARCHAR},
            </if>
            <if test="fileType != null">
                file_type = #{fileType,jdbcType=BIT},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=BIT},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where file_id = #{fileId,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.jxm.file.entity.RPanUserFile">
        update r_pan_user_file
        set user_id = #{userId,jdbcType=BIGINT},
          parent_id = #{parentId,jdbcType=BIGINT},
          real_file_id = #{realFileId,jdbcType=BIGINT},
          filename = #{filename,jdbcType=VARCHAR},
          folder_flag = #{folderFlag,jdbcType=BIT},
          file_size_desc = #{fileSizeDesc,jdbcType=VARCHAR},
          file_type = #{file_type,jdbcType=BIT},
          del_flag = #{delFlag,jdbcType=BIT},
          create_user = #{createUser,jdbcType=BIGINT},
          create_time = #{createTime,jdbcType=TIMESTAMP},
          update_user = #{updateUser,jdbcType=BIGINT},
          update_time = #{updateTime,jdbcType=TIMESTAMP}
        where file_id = #{fileId,jdbcType=BIGINT}
    </update>

    <delete id="deleteBatchReal" parameterType="java.lang.Long">
        delete from r_pan_user_file
        where
        file_id in
        <foreach collection="idList" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <update id="passeBatch" parameterType="java.lang.Long">
        update  r_pan_user_file
        set pass_flag=1
        where
        file_id in
        <foreach collection="idList" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>


    <!--===================================================================自定义===================================================================-->

    <select id="selectRPanUserFileVOListByUserIdAndFileTypeAndParentIdAndDelFlag"
            resultType="com.jxm.file.vo.RPanUserFileVO">
        SELECT
        a1.file_id AS fileId,
        a1.parent_id AS parentId,
        a1.filename AS filename,
        a1.folder_flag AS folderFlag,
        a1.file_size_desc AS fileSizeDesc,
        a1.file_type AS fileType,
        a1.create_time AS createTime,
        a1.update_time AS updateTime
        FROM
        r_pan_user_file a1
        WHERE
        a1.user_id=#{userId}
        <if test="parentId != null and parentId != -1">
            AND a1.parent_id = #{parentId}
        </if>
        <if test="fileTypeArray != null">
            AND a1.file_type IN
            <foreach collection="fileTypeArray" open="(" close=")" item="item" separator=",">
                #{item}
            </foreach>
        </if>
        AND a1.del_flag = #{delFlag}
    </select>

    <select id="selectRPanUserFileVOListBykeyword" resultType="com.jxm.file.vo.RPanUserFileDisplayVO">
        SELECT
        a1.file_id AS fileId,
        a1.parent_id AS parentId,
        a1.filename AS filename,
        a1.folder_flag AS folderFlag,
        a1.file_size_desc AS fileSizeDesc,
        a1.file_type AS fileType,
        a1.create_time AS createTime,
        a1.update_time AS updateTime,
        a1.user_name AS creatName
        FROM
        r_pan_user_file a1
        <where>
            a1.pass_flag =0
            <if test="depId != null  and depId != ''">
             and   a1.dep_id = #{depId,jdbcType=BIGINT}
            </if>
            <if test="keyword != null  and keyword != ''">
                and a1.filename like concat('%', #{keyword}, '%')
            </if>
            <if test="delFlag != null  and delFlag != ''">
                AND a1.del_flag = #{delFlag}
            </if>
            <if test="fileType != null  and fileType != ''">
                and a1.file_type=#{fileType}
            </if>
        </where>
        order by a1.update_time desc
    </select>

    <select id="selectRPanUserFileVOListByUserId" resultType="com.jxm.file.vo.RPanUserFileDisplayVO">
        SELECT
        a1.file_id AS fileId,
        a1.parent_id AS parentId,
        a1.filename AS filename,
        a1.folder_flag AS folderFlag,
        a1.water_mater_flag AS waterMaterFlag,
        a1.file_size_desc AS fileSizeDesc,
        a1.file_type AS fileType,
        a1.create_time AS createTime,
        a1.pass_time AS passTime,
        a1.update_time AS updateTime,
        a1.user_name AS creatName,
        a1.pass_user_name AS passUserName
        FROM
        r_pan_user_file a1
        WHERE
        a1.dep_id=#{depId}
        <if test="passFlag != null and passFlag != -1">
            and a1.pass_flag=#{passFlag}
        </if>
        <if test="parentId != null and parentId != -1">
            AND a1.parent_id = #{parentId}
        </if>
        <if test="fileTypeArray != null">
            AND a1.file_type IN
            <foreach collection="fileTypeArray" open="(" close=")" item="item" separator=",">
                #{item}
            </foreach>
        </if>
        AND a1.del_flag = #{delFlag}
    </select>

    <select id="selectByFileId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        r_pan_user_file
        WHERE
        file_id = #{fileId}
        AND del_flag = 0
    </select>

    <select id="selectCountByUserIdAndFilenameAndParentId" resultType="int">
        SELECT
            COUNT(1)
        FROM
            r_pan_user_file
        WHERE
            dep_id = #{depId}
            AND del_flag = 0
            AND parent_id = #{parentId}
            AND filename = #{filename}
    </select>

    <delete id="deleteBatch">
        DELETE FROM r_pan_user_file WHERE  file_id IN
        <foreach collection="idList" open="(" close=")" item="item" separator=",">
            #{item}
        </foreach>
    </delete>

    <delete id="deleteById" parameterType="java.lang.Long">
    delete from r_pan_user_file
    where file_id = #{id,jdbcType=BIGINT}
  </delete>

    <update id="passFileById">
        update r_pan_user_file
        SET
        pass_flag=1,
        pass_user_id = #{passUserId},
        pass_user_name = #{passUserName},
        pass_time = NOW()
        where file_id = #{id,jdbcType=BIGINT}
    </update>

    <select id="getUserByFileId" resultType="java.lang.Long" parameterType="java.lang.Long">
        SELECT
        a1.user_id
        FROM
        r_pan_user_file a1
        WHERE
        a1.file_id=#{fileId}
    </select>

    <select id="selectFolderListByUserId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        r_pan_user_file
        WHERE
        dep_id = #{rootFileId}
        AND del_flag = 0
        AND folder_flag = 1
        AND pass_flag=1
    </select>

    <select id="selectListByFileIdList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        r_pan_user_file
        WHERE
        file_id IN
        <foreach collection="idList" open="(" close=")" item="item" separator=",">
            #{item}
        </foreach>
    </select>

    <insert id="insertBatch" parameterType="list">
        INSERT INTO r_pan_user_file (user_id, parent_id, file_id, real_file_id, filename, folder_flag, file_size_desc,
        file_type, del_flag, create_user, create_time, update_user, update_time,dep_id)
        VALUES
        <foreach collection="recordList" item="item" separator=",">
            (
            #{item.userId},
            #{item.parentId},
            #{item.fileId},
            #{item.realFileId},
            #{item.filename},
            #{item.folderFlag},
            #{item.fileSizeDesc},
            #{item.fileType},
            #{item.delFlag},
            #{item.createUser},
            #{item.createTime},
            #{item.updateUser},
            #{item.updateTime},
            #{item.depId}
            )
        </foreach>

    </insert>

    <select id="selectRPanUserFileVOListByUserIdAndFilenameAndFileTypes"
            resultType="com.jxm.file.vo.RPanUserFileSearchVO">
        SELECT
        file_id AS fileId,
        parent_id AS parentId,
        filename AS filename,
        folder_flag AS folderFlag,
        file_size_desc AS fileSizeDesc,
        file_type AS fileType,
        create_time AS createTime,
        update_time AS updateTime
        FROM
        r_pan_user_file
        WHERE
        user_id = #{userId}
        AND del_flag = 0
        AND filename LIKE CONCAT('%', #{keyword}, '%')
        <if test="fileTypeArray != null">
            AND file_type IN
            <foreach collection="fileTypeArray" open="(" close=")" item="item" separator=",">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="selectRPanUserFileVOByFileIdAndUserId" resultType="com.jxm.file.vo.RPanUserFileDisplayVO">
        SELECT
            a1.file_id AS fileId,
            a1.parent_id AS parentId,
            a1.filename AS filename,
            a1.folder_flag AS folderFlag,
            a1.file_size_desc AS fileSizeDesc,
            a1.file_type AS fileType,
            a1.create_time AS createTime,
            a1.update_time AS updateTime
        FROM
            r_pan_user_file a1
        WHERE
            file_id = #{fileId}
            AND user_id = #{userId}
            AND del_flag = 0
    </select>

    <select id="selectAllListByParentId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        r_pan_user_file
        WHERE
        parent_id = #{parentId}
    </select>

    <select id="getTheNumberOfFileTypes" resultType="com.jxm.file.dto.DashboardUserFileParam">
        SELECT
       a1.file_type As fileType,
       a1.create_user As userId
        FROM
        r_pan_user_file a1
        WHERE
        a1.dep_id=#{depId}
        AND a1.del_flag = 0
        AND a1.folder_flag=0
    </select>

    <select id="selectAvailableListByParentId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        r_pan_user_file
        WHERE
        parent_id = #{parentId}
        AND del_flag = 0
    </select>

    <select id="selectAvailableRPanUserFileVOListByParentId" resultType="com.jxm.file.vo.RPanUserFileVO">
        SELECT
            file_id AS fileId,
            parent_id AS parentId,
            filename AS filename,
            folder_flag AS folderFlag,
            file_size_desc AS fileSizeDesc,
            file_type AS fileType,
            create_time AS createTime,
            update_time AS updateTime
        FROM
            r_pan_user_file
        WHERE
            parent_id = #{parentId}
            AND del_flag = 0
    </select>

    <update id="updateUserFileDelFlagByFileIdListAndUserId">
        UPDATE
        r_pan_user_file
        SET
        del_flag = 0,
        update_user = #{userId},
        update_time = NOW()
        WHERE
        dep_id = #{depId}
        AND file_id IN
        <foreach collection="fileIdList" open="(" close=")" item="item" separator=",">
            #{item}
        </foreach>
    </update>

    <delete id="physicalDeleteBatch">
        DELETE FROM r_pan_user_file WHERE dep_id = #{depId} AND file_id IN
        <foreach collection="fileIdList" open="(" close=")" item="item" separator=",">
            #{item}
        </foreach>
    </delete>

    <select id="selectCountByRealFileId" resultType="int">
        SELECT
            COUNT(1)
        FROM
            r_pan_user_file
        WHERE
            real_file_id = #{realFileId}
    </select>

    <select id="selectRPanUserFileVOListByFileIdList" resultType="com.jxm.file.vo.RPanUserFileVO">
        SELECT
        file_id AS fileId,
        parent_id AS parentId,
        filename AS filename,
        folder_flag AS folderFlag,
        file_size_desc AS fileSizeDesc,
        file_type AS fileType,
        create_time AS createTime,
        update_time AS updateTime
        FROM
        r_pan_user_file
        WHERE
        del_flag = 0
        AND file_id IN
        <foreach collection="fileIdList" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>
    <!--todo-->
    <select id="selectTopFolderByUserId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        r_pan_user_file
        WHERE dep_id = #{depId}
        AND del_flag = 0
        AND parent_id = 0
        AND folder_flag = 1
    </select>

    <select id="selectAvailableFileIdListByParentId" resultType="java.lang.Long">
        SELECT
            file_id
        FROM
            r_pan_user_file
        WHERE
            parent_id = #{parentId}
        AND del_flag = 0
    </select>

    <select id="selectFilePositionBOListByFileIds" resultType="com.jxm.file.bo.FilePositionBO">
        SELECT
        file_id AS fileId,
        filename AS filename
        FROM
        r_pan_user_file
        WHERE
        del_flag = 0
        AND file_id IN
        <foreach collection="fileIdList" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>

</mapper>