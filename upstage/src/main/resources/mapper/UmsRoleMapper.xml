<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxm.upstage.mapper.UmsRoleMapper">
  <resultMap id="BaseResultMap" type="com.jxm.upstage.model.UmsRole">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="admin_count" jdbcType="INTEGER" property="adminCount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, description, admin_count, create_time, status, sort
  </sql>

  <insert id="insert" parameterType="com.jxm.upstage.model.UmsRole">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ums_role (name, description, admin_count,
    create_time, status, sort
    )
    values (#{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{adminCount,jdbcType=INTEGER},
    #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}
    )
  </insert>

  <select id="selectAllRole"  resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ums_role
  </select>

  <select id="selectByName"  resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from ums_role
    <where>
      <if test="keyword != null  and keyword != ''" >
         name like concat('%', #{keyword}, '%')
      </if>
    </where>
  </select>

  <update id="subAdminCountByClass" parameterType="com.jxm.upstage.dto.RoleGroupCount">
    <foreach collection="RoleGroupCounts" item="item" index="index" separator=";">
      update ums_role
      set
      admin_count = admin_count - #{item.count,jdbcType=BIGINT}
      where
      id = #{item.roleId,jdbcType=BIGINT}
    </foreach>
  </update>

  <update id="addAdminCount" parameterType="java.lang.Long">
    update ums_role set admin_count=admin_count+1
    where id in
    <foreach collection="roleId" item="id" separator="," open="(" close=")">
      #{id}
    </foreach>
  </update>

  <update id="subAdminCount" parameterType="java.lang.Long">
    update ums_role set admin_count=admin_count-1
    where id in
    <foreach collection="roleId" item="id" separator="," open="(" close=")">
      #{id}
    </foreach>
  </update>

  <update id="updateByPrimaryKey" parameterType="com.jxm.upstage.model.UmsRole">
    update ums_role
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="adminCount != null">
        admin_count = #{adminCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <delete id="deleteByIds" parameterType="java.lang.Long">
    delete from ums_role
    where
    id in
    <foreach collection="ids" item="id" separator="," open="(" close=")">
      #{id}
    </foreach>
  </delete>

</mapper>